/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/recipes/route";
exports.ids = ["app/api/recipes/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "?32c4":
/*!****************************!*\
  !*** bufferutil (ignored) ***!
  \****************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?66e9":
/*!********************************!*\
  !*** utf-8-validate (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Frecipes%2Froute&page=%2Fapi%2Frecipes%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Frecipes%2Froute.ts&appDir=%2FUsers%2Fnicolaivarney%2FSites2%2Ffunctionalfoods%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fnicolaivarney%2FSites2%2Ffunctionalfoods&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Frecipes%2Froute&page=%2Fapi%2Frecipes%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Frecipes%2Froute.ts&appDir=%2FUsers%2Fnicolaivarney%2FSites2%2Ffunctionalfoods%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fnicolaivarney%2FSites2%2Ffunctionalfoods&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_nicolaivarney_Sites2_functionalfoods_src_app_api_recipes_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/recipes/route.ts */ \"(rsc)/./src/app/api/recipes/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/recipes/route\",\n        pathname: \"/api/recipes\",\n        filename: \"route\",\n        bundlePath: \"app/api/recipes/route\"\n    },\n    resolvedPagePath: \"/Users/nicolaivarney/Sites2/functionalfoods/src/app/api/recipes/route.ts\",\n    nextConfigOutput,\n    userland: _Users_nicolaivarney_Sites2_functionalfoods_src_app_api_recipes_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/recipes/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZyZWNpcGVzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZyZWNpcGVzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGcmVjaXBlcyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRm5pY29sYWl2YXJuZXklMkZTaXRlczIlMkZmdW5jdGlvbmFsZm9vZHMlMkZzcmMlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGbmljb2xhaXZhcm5leSUyRlNpdGVzMiUyRmZ1bmN0aW9uYWxmb29kcyZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUN3QjtBQUNyRztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVHQUF1RztBQUMvRztBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzZKOztBQUU3SiIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bmN0aW9uYWxmb29kcy8/ZDNmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvbmljb2xhaXZhcm5leS9TaXRlczIvZnVuY3Rpb25hbGZvb2RzL3NyYy9hcHAvYXBpL3JlY2lwZXMvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3JlY2lwZXMvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9yZWNpcGVzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9yZWNpcGVzL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL25pY29sYWl2YXJuZXkvU2l0ZXMyL2Z1bmN0aW9uYWxmb29kcy9zcmMvYXBwL2FwaS9yZWNpcGVzL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL3JlY2lwZXMvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0LCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Frecipes%2Froute&page=%2Fapi%2Frecipes%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Frecipes%2Froute.ts&appDir=%2FUsers%2Fnicolaivarney%2FSites2%2Ffunctionalfoods%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fnicolaivarney%2FSites2%2Ffunctionalfoods&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/recipes/route.ts":
/*!**************************************!*\
  !*** ./src/app/api/recipes/route.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _lib_database_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/database-service */ \"(rsc)/./src/lib/database-service.ts\");\n\n\nasync function GET() {\n    try {\n        const recipes = await _lib_database_service__WEBPACK_IMPORTED_MODULE_1__.databaseService.getRecipes();\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json(recipes);\n    } catch (error) {\n        console.error(\"Error fetching recipes:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Failed to fetch recipes\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9yZWNpcGVzL3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEwQztBQUNjO0FBRWpELGVBQWVFO0lBQ3BCLElBQUk7UUFDRixNQUFNQyxVQUFVLE1BQU1GLGtFQUFlQSxDQUFDRyxVQUFVO1FBQ2hELE9BQU9KLGtGQUFZQSxDQUFDSyxJQUFJLENBQUNGO0lBQzNCLEVBQUUsT0FBT0csT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsMkJBQTJCQTtRQUN6QyxPQUFPTixrRkFBWUEsQ0FBQ0ssSUFBSSxDQUN0QjtZQUFFQyxPQUFPO1FBQTBCLEdBQ25DO1lBQUVFLFFBQVE7UUFBSTtJQUVsQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVuY3Rpb25hbGZvb2RzLy4vc3JjL2FwcC9hcGkvcmVjaXBlcy9yb3V0ZS50cz82MjBmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJ1xuaW1wb3J0IHsgZGF0YWJhc2VTZXJ2aWNlIH0gZnJvbSAnQC9saWIvZGF0YWJhc2Utc2VydmljZSdcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVCgpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZWNpcGVzID0gYXdhaXQgZGF0YWJhc2VTZXJ2aWNlLmdldFJlY2lwZXMoKVxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihyZWNpcGVzKVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIHJlY2lwZXM6JywgZXJyb3IpXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgeyBlcnJvcjogJ0ZhaWxlZCB0byBmZXRjaCByZWNpcGVzJyB9LFxuICAgICAgeyBzdGF0dXM6IDUwMCB9XG4gICAgKVxuICB9XG59ICJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJkYXRhYmFzZVNlcnZpY2UiLCJHRVQiLCJyZWNpcGVzIiwiZ2V0UmVjaXBlcyIsImpzb24iLCJlcnJvciIsImNvbnNvbGUiLCJzdGF0dXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/recipes/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/database-service.ts":
/*!*************************************!*\
  !*** ./src/lib/database-service.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DatabaseService: () => (/* binding */ DatabaseService),\n/* harmony export */   databaseService: () => (/* binding */ databaseService)\n/* harmony export */ });\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase */ \"(rsc)/./src/lib/supabase.ts\");\n\nclass DatabaseService {\n    /**\n   * Get all recipes from database\n   */ async getRecipes() {\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"recipes\").select(\"*\");\n        if (error) {\n            console.error(\"Error fetching recipes:\", error);\n            return [];\n        }\n        console.log(`🔍 Raw database data: ${data?.length || 0} recipes found`);\n        if (data && data.length > 0) {\n            console.log(\"\\uD83D\\uDCCB First raw recipe from DB:\", {\n                id: data[0].id,\n                title: data[0].title,\n                imageurl: data[0].imageurl,\n                totaltime: data[0].totaltime\n            });\n        }\n        // Transform snake_case database fields to camelCase for frontend\n        const transformedRecipes = (data || []).map((recipe)=>({\n                id: recipe.id,\n                title: recipe.title,\n                description: recipe.description,\n                shortDescription: recipe.shortdescription,\n                imageUrl: recipe.imageurl,\n                imageAlt: recipe.imagealt,\n                preparationTime: recipe.preparationtime,\n                cookingTime: recipe.cookingtime,\n                totalTime: recipe.totaltime,\n                servings: recipe.servings,\n                difficulty: recipe.difficulty,\n                calories: recipe.calories,\n                protein: recipe.protein,\n                carbs: recipe.carbs,\n                fat: recipe.fat,\n                fiber: recipe.fiber,\n                dietaryCategories: recipe.dietarycategories || [],\n                mainCategory: recipe.maincategory,\n                subCategories: recipe.subcategories || [],\n                ingredients: recipe.ingredients || [],\n                instructions: recipe.instructions || [],\n                publishedAt: recipe.publishedat ? new Date(recipe.publishedat) : new Date(),\n                updatedAt: recipe.updatedat ? new Date(recipe.updatedat) : new Date(),\n                metaTitle: recipe.metatitle,\n                metaDescription: recipe.metadescription,\n                keywords: recipe.keywords || [],\n                author: recipe.author,\n                slug: recipe.slug,\n                rating: recipe.rating,\n                reviewCount: recipe.reviewcount,\n                prepTimeISO: recipe.preptimeiso,\n                cookTimeISO: recipe.cooktimeiso,\n                totalTimeISO: recipe.totaltimeiso\n            }));\n        console.log(`✅ Transformed ${transformedRecipes.length} recipes for frontend`);\n        return transformedRecipes;\n    }\n    /**\n   * Get all ingredients from database\n   */ async getIngredients() {\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"ingredients\").select(\"*\");\n        if (error) {\n            console.error(\"Error fetching ingredients:\", error);\n            return [];\n        }\n        // Transform snake_case database fields to camelCase for frontend\n        const transformedIngredients = (data || []).map((ingredient)=>({\n                id: ingredient.id,\n                name: ingredient.name,\n                category: ingredient.category,\n                description: ingredient.description,\n                exclusions: ingredient.exclusions || [],\n                allergens: ingredient.allergens || [],\n                commonNames: ingredient.common_names || [],\n                isActive: ingredient.is_active ?? true,\n                createdAt: new Date(ingredient.created_at),\n                updatedAt: new Date(ingredient.updated_at || ingredient.created_at)\n            }));\n        return transformedIngredients;\n    }\n    /**\n   * Generate unique IDs for recipes that don't have one\n   */ async assignUniqueIds(recipes) {\n        // SIMPLE: Generate IDs only for recipes without IDs, starting from 1000\n        let nextId = 1000;\n        // Check existing recipes to find highest ID\n        const { data: existingRecipes } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"recipes\").select(\"id\");\n        if (existingRecipes) {\n            const numericIds = existingRecipes.map((r)=>parseInt(r.id)).filter((id)=>!isNaN(id) && id > 0 && id < 10000) // Only use reasonable numeric IDs (1-9999), not timestamps\n            ;\n            if (numericIds.length > 0) {\n                nextId = Math.max(...numericIds) + 1;\n                console.log(`🔍 Found numeric IDs: [${numericIds.join(\", \")}], using nextId: ${nextId}`);\n            } else {\n                console.log(`🔍 No valid numeric IDs found, starting from: ${nextId}`);\n            }\n        }\n        return recipes.map((recipe)=>{\n            if (!recipe.id || recipe.id === \"\") {\n                const newId = nextId.toString();\n                console.log(`🆔 Assigning ID ${newId} to recipe: ${recipe.title}`);\n                nextId++;\n                return {\n                    ...recipe,\n                    id: newId\n                };\n            }\n            return recipe;\n        });\n    }\n    /**\n   * Save recipes to database (using only existing columns)\n   */ async saveRecipes(recipes) {\n        try {\n            console.log(`💾 Attempting to save ${recipes.length} recipes...`);\n            // Assign unique IDs to recipes that don't have one\n            const recipesWithIds = await this.assignUniqueIds(recipes);\n            // Filter recipes to only include columns that exist in the database\n            const filteredRecipes = recipesWithIds.map((recipe)=>{\n                const filteredRecipe = {\n                    id: recipe.id,\n                    title: recipe.title,\n                    description: recipe.description,\n                    calories: recipe.calories || 0,\n                    protein: recipe.protein || 0,\n                    carbs: recipe.carbs || 0,\n                    fat: recipe.fat || 0,\n                    fiber: recipe.fiber || 0,\n                    keywords: recipe.keywords,\n                    ingredients: recipe.ingredients,\n                    instructions: recipe.instructions,\n                    servings: recipe.servings || 2,\n                    difficulty: recipe.difficulty || \"Nem\",\n                    author: recipe.author || \"Functional Foods\"\n                };\n                // Add optional fields if they exist (only include columns we know exist)\n                if (recipe.slug) filteredRecipe.slug = recipe.slug;\n                // Add default values for fields that frontend expects but don't exist in database\n                filteredRecipe.shortdescription = recipe.shortDescription || null;\n                filteredRecipe.preparationtime = recipe.preparationTime || 0;\n                filteredRecipe.cookingtime = recipe.cookingTime || 0;\n                filteredRecipe.totaltime = recipe.totalTime || (recipe.preparationTime || 0) + (recipe.cookingTime || 0);\n                filteredRecipe.metatitle = recipe.metaTitle || null;\n                filteredRecipe.metadescription = recipe.metaDescription || null;\n                filteredRecipe.maincategory = recipe.mainCategory || null;\n                filteredRecipe.subcategories = recipe.subCategories || null;\n                filteredRecipe.dietarycategories = recipe.dietaryCategories && recipe.dietaryCategories.length > 0 ? recipe.dietaryCategories : null;\n                filteredRecipe.imageurl = recipe.imageUrl || \"/images/recipe-placeholder.jpg\";\n                filteredRecipe.imagealt = recipe.imageAlt || null;\n                filteredRecipe.publishedat = recipe.publishedAt ? typeof recipe.publishedAt === \"string\" ? recipe.publishedAt : recipe.publishedAt.toISOString() : new Date().toISOString();\n                filteredRecipe.updatedat = recipe.updatedAt ? typeof recipe.updatedAt === \"string\" ? recipe.updatedAt : recipe.updatedAt.toISOString() : new Date().toISOString();\n                filteredRecipe.rating = recipe.rating || null;\n                filteredRecipe.reviewcount = recipe.reviewCount || null;\n                filteredRecipe.preptimeiso = recipe.prepTimeISO || null;\n                filteredRecipe.cooktimeiso = recipe.cookTimeISO || null;\n                filteredRecipe.totaltimeiso = recipe.totalTimeISO || null;\n                // Note: nutritionalinfo column doesn't exist yet - store in description for now\n                if (recipe.nutritionalInfo) {\n                    filteredRecipe.description = recipe.description + ` [Frida DTU: ${Math.round(recipe.nutritionalInfo.calories)} cal, ${Math.round(recipe.nutritionalInfo.protein)}g protein]`;\n                }\n                return filteredRecipe;\n            });\n            // Log the first recipe structure for debugging\n            if (filteredRecipes.length > 0) {\n                console.log(\"\\uD83D\\uDCCB First filtered recipe structure:\", JSON.stringify(filteredRecipes[0], null, 2));\n            }\n            const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"recipes\").insert(filteredRecipes);\n            if (error) {\n                console.error(\"❌ Error saving recipes:\", error);\n                console.error(\"Error details:\", {\n                    message: error.message,\n                    details: error.details,\n                    hint: error.hint,\n                    code: error.code\n                });\n                return false;\n            }\n            console.log(`✅ Successfully saved ${recipes.length} recipes to database`);\n            return true;\n        } catch (err) {\n            console.error(\"❌ Exception saving recipes:\", err);\n            return false;\n        }\n    }\n    /**\n   * Save ingredients to database (using only existing columns)\n   */ async saveIngredients(ingredients) {\n        try {\n            console.log(`💾 Attempting to save ${ingredients.length} ingredients...`);\n            // Filter ingredients to only include columns that exist in the database\n            const filteredIngredients = ingredients.map((ingredient)=>{\n                const filteredIngredient = {\n                    id: ingredient.id,\n                    name: ingredient.name,\n                    category: ingredient.category,\n                    description: ingredient.description\n                };\n                // Add optional fields if they exist (only include columns we know exist)\n                if (ingredient.exclusions) filteredIngredient.exclusions = ingredient.exclusions;\n                if (ingredient.allergens) filteredIngredient.allergens = ingredient.allergens;\n                // Note: commonNames, isActive, createdAt, updatedAt, nutritionalInfo columns don't exist in the database\n                // so we exclude them to prevent errors\n                return filteredIngredient;\n            });\n            // Log the first ingredient structure for debugging\n            if (filteredIngredients.length > 0) {\n                console.log(\"\\uD83D\\uDCCB First filtered ingredient structure:\", JSON.stringify(filteredIngredients[0], null, 2));\n            }\n            const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"ingredients\").upsert(filteredIngredients, {\n                onConflict: \"id\"\n            });\n            if (error) {\n                console.error(\"❌ Error saving ingredients:\", error);\n                console.error(\"Error details:\", {\n                    message: error.message,\n                    details: error.details,\n                    hint: error.hint,\n                    code: error.code\n                });\n                return false;\n            }\n            console.log(`✅ Successfully saved ${ingredients.length} ingredients to database`);\n            return true;\n        } catch (err) {\n            console.error(\"❌ Exception saving ingredients:\", err);\n            return false;\n        }\n    }\n    /**\n   * Check database tables exist\n   */ async checkDatabaseStructure() {\n        try {\n            console.log(\"\\uD83D\\uDD0D Checking database structure...\");\n            // Test if tables exist\n            const { data: recipesTable, error: recipesError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"recipes\").select(\"count\", {\n                count: \"exact\",\n                head: true\n            });\n            const { data: ingredientsTable, error: ingredientsError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"ingredients\").select(\"count\", {\n                count: \"exact\",\n                head: true\n            });\n            const structure = {\n                recipesTable: {\n                    exists: !recipesError,\n                    error: recipesError?.message || null\n                },\n                ingredientsTable: {\n                    exists: !ingredientsError,\n                    error: ingredientsError?.message || null\n                }\n            };\n            console.log(\"\\uD83D\\uDCCA Database structure check:\", structure);\n            return structure;\n        } catch (err) {\n            console.error(\"❌ Error checking database structure:\", err);\n            return {\n                error: err\n            };\n        }\n    }\n    /**\n   * Get database statistics\n   */ async getDatabaseStats() {\n        try {\n            const { count: recipeCount, error: recipeError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"recipes\").select(\"*\", {\n                count: \"exact\",\n                head: true\n            });\n            const { count: ingredientCount, error: ingredientError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"ingredients\").select(\"*\", {\n                count: \"exact\",\n                head: true\n            });\n            if (recipeError || ingredientError) {\n                console.error(\"Error fetching database stats:\", recipeError || ingredientError);\n                return {\n                    recipeCount: 0,\n                    ingredientCount: 0\n                };\n            }\n            return {\n                recipeCount: recipeCount || 0,\n                ingredientCount: ingredientCount || 0\n            };\n        } catch (err) {\n            console.error(\"❌ Error getting database stats:\", err);\n            return {\n                recipeCount: 0,\n                ingredientCount: 0\n            };\n        }\n    }\n    /**\n   * Test database connection\n   */ async testConnection() {\n        try {\n            console.log(\"\\uD83D\\uDD0D Testing Supabase connection...\");\n            const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"recipes\").select(\"count\", {\n                count: \"exact\",\n                head: true\n            });\n            if (error) {\n                console.error(\"❌ Connection test failed:\", error);\n                return false;\n            }\n            console.log(\"✅ Supabase connection successful!\");\n            return true;\n        } catch (err) {\n            console.error(\"❌ Connection test exception:\", err);\n            return false;\n        }\n    }\n}\nconst databaseService = new DatabaseService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/database-service.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/supabase.ts":
/*!*****************************!*\
  !*** ./src/lib/supabase.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = \"https://najaxycfjgultwdwffhv.supabase.co\";\nconst supabaseAnonKey = \"sb_publishable_7Vz1i0EKTMPNw0ldFMIScQ_qX_iHMKI\";\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3N1cGFiYXNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9EO0FBRXBELE1BQU1DLGNBQWM7QUFDcEIsTUFBTUMsa0JBQWtCO0FBRWpCLE1BQU1DLFdBQVdILG1FQUFZQSxDQUFDQyxhQUFhQyxpQkFBZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdW5jdGlvbmFsZm9vZHMvLi9zcmMvbGliL3N1cGFiYXNlLnRzPzA2ZTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL3N1cGFiYXNlLWpzJ1xuXG5jb25zdCBzdXBhYmFzZVVybCA9ICdodHRwczovL25hamF4eWNmamd1bHR3ZHdmZmh2LnN1cGFiYXNlLmNvJ1xuY29uc3Qgc3VwYWJhc2VBbm9uS2V5ID0gJ3NiX3B1Ymxpc2hhYmxlXzdWejFpMEVLVE1QTncwbGRGTUlTY1FfcVhfaUhNS0knXG5cbmV4cG9ydCBjb25zdCBzdXBhYmFzZSA9IGNyZWF0ZUNsaWVudChzdXBhYmFzZVVybCwgc3VwYWJhc2VBbm9uS2V5KSAiXSwibmFtZXMiOlsiY3JlYXRlQ2xpZW50Iiwic3VwYWJhc2VVcmwiLCJzdXBhYmFzZUFub25LZXkiLCJzdXBhYmFzZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/supabase.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/ws","vendor-chunks/whatwg-url","vendor-chunks/webidl-conversions","vendor-chunks/isows"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Frecipes%2Froute&page=%2Fapi%2Frecipes%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Frecipes%2Froute.ts&appDir=%2FUsers%2Fnicolaivarney%2FSites2%2Ffunctionalfoods%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fnicolaivarney%2FSites2%2Ffunctionalfoods&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();